---
wheres on an attribute 1: SELECT "posts".* FROM "posts" WHERE "posts"."title" = 'OJ
  Simpson'
accepts nil 1: SELECT "posts".* FROM "posts"
wheres on associations 1: SELECT "posts".* FROM "posts" INNER JOIN "authors" ON "authors"."id"
  = "posts"."author_id" WHERE "authors"."name" = 'Yo Gotti'
wheres using functions 1: SELECT "posts".* FROM "posts" INNER JOIN "authors" ON "authors"."id"
  = "posts"."author_id" WHERE coalesce("posts"."title", "authors"."name") = 'meatloaf'
wheres using operations 1: SELECT "posts".* FROM "posts" WHERE ("posts"."id" + 1)
  = 2
wheres using complex conditions 1: SELECT "posts".* FROM "posts" INNER JOIN "authors"
  ON "authors"."id" = "posts"."author_id" WHERE ("posts"."title" LIKE 'Simp%' OR "authors"."name"
  = 'meatloaf')
wheres on an aliased association 1: SELECT "posts".* FROM "posts" INNER JOIN "authors"
  ON "authors"."id" = "posts"."author_id" INNER JOIN "posts" "posts_authors" ON "posts_authors"."author_id"
  = "authors"."id" WHERE ("posts_authors"."id" > 0)
wheres on an aliased association with through 1: SELECT "posts".* FROM "posts" INNER
  JOIN "comments" ON "comments"."post_id" = "posts"."id" INNER JOIN "authors" ON "authors"."id"
  = "posts"."author_id" INNER JOIN "comments" "author_comments_posts" ON "author_comments_posts"."author_id"
  = "authors"."id" WHERE ("author_comments_posts"."id" > 0)
wheres on polymorphic associations 1: SELECT "pictures".* FROM "pictures" INNER JOIN
  "posts" ON "posts"."id" = "pictures"."imageable_id" AND "pictures"."imageable_type"
  = 'Post' WHERE ("posts"."title" LIKE 'meatloaf')
wheres on polymorphic associations outer join 1: SELECT "pictures".* FROM "pictures"
  LEFT OUTER JOIN "posts" ON "posts"."id" = "pictures"."imageable_id" AND "pictures"."imageable_type"
  = 'Post' WHERE ("posts"."title" LIKE 'meatloaf')
wheres and correctly aliases 1: SELECT "posts".* FROM "posts" INNER JOIN "authors"
  ON "authors"."id" = "posts"."author_id" INNER JOIN "comments" ON "comments"."author_id"
  = "authors"."id" WHERE "comments"."id" IN (1, 2) AND "authors"."name" = 'Joe'
wheres on an alias with outer join 1: SELECT "posts".* FROM "posts" INNER JOIN "authors"
  ON "authors"."id" = "posts"."author_id" LEFT OUTER JOIN "comments" ON "comments"."author_id"
  = "authors"."id" WHERE "comments"."id" IN (1, 2) AND "authors"."name" = 'Joe'
wheres on an alias with a function 1: SELECT "posts".* FROM "posts" INNER JOIN "authors"
  ON "authors"."id" = "posts"."author_id" INNER JOIN "posts" "posts_authors" ON "posts_authors"."author_id"
  = "authors"."id" WHERE (coalesce("posts_authors"."id", 1) > 0)
wheres with a subquery 1: SELECT "posts".* FROM "posts" INNER JOIN "authors" ON "authors"."id"
  = "posts"."author_id" WHERE "authors"."id" IN (SELECT  "authors"."id" FROM "authors"
  LIMIT 3)
wheres with an empty subquery 1: SELECT "posts".* FROM "posts" WHERE "posts"."author_id"
  IN (SELECT "authors"."id" FROM "authors" WHERE (1=0))
wheres with an empty subquery and keeps values 1: SELECT "posts".* FROM "posts" WHERE
  "posts"."author_id" IN (SELECT "authors"."id" FROM "authors" INNER JOIN "posts"
  ON "posts"."author_id" = "authors"."id" WHERE (1=0) GROUP BY "authors"."id" ORDER
  BY "authors"."id" ASC)
wheres with a not in subquery 1: SELECT "posts".* FROM "posts" WHERE ("posts"."author_id"
  NOT IN (SELECT "authors"."id" FROM "authors" WHERE (1=0)))
wheres using a simple table 1: SELECT "posts".* FROM "posts" INNER JOIN "authors"
  ON "authors"."id" = "posts"."author_id" WHERE "authors"."name" = 'Yo Gotti'
builds an exists query 1: SELECT "posts".* FROM "posts" WHERE (EXISTS(SELECT "posts".*
  FROM "posts" WHERE "posts"."author_id" = 1))
builds a not exists query 1: SELECT "posts".* FROM "posts" WHERE (NOT EXISTS(SELECT
  "posts".* FROM "posts" WHERE "posts"."author_id" = 1))
'wheres an association using #== 1': SELECT "posts".* FROM "posts" WHERE ("posts"."author_id"
  = 42)
'wheres an association using #!= 1': SELECT "posts".* FROM "posts" WHERE (("posts"."author_id"
  != 42))
