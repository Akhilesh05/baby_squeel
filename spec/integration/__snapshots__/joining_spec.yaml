---
inner joins 1: SELECT "posts".* FROM "posts" INNER JOIN "authors" ON "authors"."id"
  = "posts"."author_id"
inner joins explicitly 1: SELECT "posts".* FROM "posts" INNER JOIN "authors" ON "authors"."id"
  = "posts"."author_id"
inner joins explicitly with alias 1: SELECT "posts".* FROM "posts" INNER JOIN "authors"
  "a" ON "a"."id" = "posts"."author_id"
outer joins 1: SELECT "posts".* FROM "posts" LEFT OUTER JOIN "authors" ON "authors"."id"
  = "posts"."author_id"
self joins 1: SELECT "posts".* FROM "posts" INNER JOIN "posts" ON "posts"."id" = 1
self outer joins 1: SELECT "posts".* FROM "posts" LEFT OUTER JOIN "posts" ON "posts"."id"
  = 1
self joins with alias 1: SELECT "posts".* FROM "posts" INNER JOIN "posts" "meatloaf"
  ON "posts"."id" = 1
aliases 1: SELECT "posts".* FROM "posts" INNER JOIN "authors" "a" ON "authors"."id"
  = "posts"."author_id"
aliases after the on clause 1: SELECT "posts".* FROM "posts" INNER JOIN "authors"
  "a" ON "authors"."id" = "posts"."author_id"
merges bind values 1: SELECT "posts".* FROM "posts" INNER JOIN "authors" ON "authors"."id"
  = "posts"."author_id" AND "authors"."ugly" = 't' INNER JOIN "comments" ON "comments"."author_id"
  = "authors"."id"
correctly aliases when joining the same table twice 1: SELECT "posts".* FROM "posts"
  LEFT OUTER JOIN "authors" ON "authors"."id" = "posts"."author_id" LEFT OUTER JOIN
  "posts" "parents_posts" ON "parents_posts"."id" = "posts"."parent_id" LEFT OUTER
  JOIN "authors" "authors_posts" ON "authors_posts"."id" = "parents_posts"."author_id"
  WHERE ("authors"."name" = 'Rick' OR "authors_posts"."name" = 'Flair')
handles polymorphism 1: SELECT "pictures".* FROM "pictures" INNER JOIN "posts" ON
  "posts"."id" = "pictures"."imageable_id" AND "pictures"."imageable_type" = 'Post'
  INNER JOIN "comments" ON "comments"."post_id" = "posts"."id"
outer joins at multiple levels 1: SELECT "posts".* FROM "posts" LEFT OUTER JOIN "authors"
  ON "authors"."id" = "posts"."author_id" LEFT OUTER JOIN "comments" ON "comments"."author_id"
  = "authors"."id"
outer joins only the specified associations 1: SELECT "posts".* FROM "posts" INNER
  JOIN "authors" ON "authors"."id" = "posts"."author_id" LEFT OUTER JOIN "comments"
  ON "comments"."author_id" = "authors"."id"
joins a through association and then back again 1: SELECT "posts".* FROM "posts" INNER
  JOIN "authors" ON "authors"."id" = "posts"."author_id" INNER JOIN "posts" "posts_authors"
  ON "posts_authors"."author_id" = "authors"."id" LEFT OUTER JOIN "authors" "authors_posts_join"
  ON "authors_posts_join"."id" = "posts_authors"."author_id" LEFT OUTER JOIN "comments"
  ON "comments"."author_id" = "authors_posts_join"."id" INNER JOIN "posts" "posts_comments"
  ON "posts_comments"."id" = "comments"."post_id" INNER JOIN "authors" "authors_posts_join_2"
  ON "authors_posts_join_2"."id" = "posts_comments"."author_id" INNER JOIN "comments"
  "author_comments_posts" ON "author_comments_posts"."author_id" = "authors_posts_join_2"."id"
dedupes incremental joins 1: SELECT "posts".* FROM "posts" INNER JOIN "authors" ON
  "authors"."id" = "posts"."author_id" INNER JOIN "posts" "posts_authors" ON "posts_authors"."author_id"
  = "authors"."id"
dedupes through joins 1: SELECT "posts".* FROM "posts" INNER JOIN "authors" ON "authors"."id"
  = "posts"."author_id" INNER JOIN "posts" "posts_authors" ON "posts_authors"."author_id"
  = "authors"."id" INNER JOIN "authors" "authors_posts_join" ON "authors_posts_join"."id"
  = "posts_authors"."author_id" INNER JOIN "comments" ON "comments"."author_id" =
  "authors_posts_join"."id" INNER JOIN "authors" "authors_posts" ON "authors_posts"."id"
  = "posts"."author_id" INNER JOIN "posts" "posts_authors_2" ON "posts_authors_2"."author_id"
  = "authors_posts"."id" LEFT OUTER JOIN "authors" "authors_posts_join_2" ON "authors_posts_join_2"."id"
  = "posts_authors_2"."author_id" LEFT OUTER JOIN "comments" "author_comments_posts"
  ON "author_comments_posts"."author_id" = "authors_posts_join_2"."id"
dedupes incremental outer joins 1: SELECT "posts".* FROM "posts" INNER JOIN "authors"
  ON "authors"."id" = "posts"."author_id" INNER JOIN "authors" "authors_posts" ON
  "authors_posts"."id" = "posts"."author_id" LEFT OUTER JOIN "comments" ON "comments"."author_id"
  = "authors_posts"."id"
dedupes incremental outer joins (in any order) 1: SELECT "posts".* FROM "posts" INNER
  JOIN "authors" ON "authors"."id" = "posts"."author_id" LEFT OUTER JOIN "comments"
  ON "comments"."author_id" = "authors"."id" INNER JOIN "authors" "authors_posts"
  ON "authors_posts"."id" = "posts"."author_id"
